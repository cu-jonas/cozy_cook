name: Build - Web

on:
  push:
    branches: [main]      # deploy on main
    tags:     ["v*"]      # …and version tags
    
permissions:              # required for deploy-pages
  contents: read
  pages: write
  id-token: write

env:
  GODOT_VERSION:  "4.4.1-stable"
  GODOT_BASE_URL: "https://github.com/godotengine/godot/releases/download"
  WEB_PRESET:     "Web"

  ITCHIO_USERNAME: "jonaswills"
  ITCHIO_GAME: "cozy-cook"
  WINDOWS_PRESET: "Windows"  


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # — checkout —
    - uses: actions/checkout@v4
      with: {submodules: recursive}

    # — cache godot —
    - name: Cache Godot
      id: godot-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/godot
          ~/.local/share/godot/export_templates
        key: godot-${{ runner.os }}-${{ env.GODOT_VERSION }}-v5

    # — download editor & templates if cache missed —
    - name: Install Godot desktop + templates
      if: steps.godot-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        set -e
        base="${GODOT_BASE_URL}/${GODOT_VERSION}"
        echo "⬇️  $base/Godot_v${GODOT_VERSION}_linux.x86_64.zip"
        wget -q $base/Godot_v${GODOT_VERSION}_linux.x86_64.zip -O godot.zip
        unzip -q godot.zip -d ~/godot
        chmod +x ~/godot/Godot_v${GODOT_VERSION}_linux.x86_64

        echo "⬇️  $base/Godot_v${GODOT_VERSION}_export_templates.tpz"
        wget -q $base/Godot_v${GODOT_VERSION}_export_templates.tpz -O templates.tpz
        mkdir -p /tmp/tpl && unzip -q templates.tpz -d /tmp/tpl
        for F in /tmp/tpl/templates/*; do
          mkdir -p ~/.local/share/godot/export_templates/4.4.1.stable
          cp "$F"   ~/.local/share/godot/export_templates/4.4.1.stable/
        done

    # — export HTML5 —
    - name: Export HTML5
      run: |
        mkdir -p builds/web
        ~/godot/Godot_v${GODOT_VERSION}_linux.x86_64 --headless \
          --export-release "${WEB_PRESET}" builds/web/index.html

    # — upload artifact for Pages —
    - uses: actions/upload-pages-artifact@v3
      with:
        path: builds/web        # this becomes the Pages content


    - name: Export Windows (Release)
      run: |
        mkdir -p "builds/windows"
        ~/godot/Godot_v${GODOT_VERSION}_linux.x86_64 --verbose --headless \
          --export-release "${WINDOWS_PRESET}" "builds/windows/CozyCook.exe"


    - name: Zip Windows build
      run: |
        cd "builds/windows"
        zip -r ../cozy_cook_windows.zip .
        cd -          

    - name: Install butler
      run: |
        curl -L https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default > butler.zip
        unzip -oq butler.zip -d $HOME/.local/bin
        chmod +x $HOME/.local/bin/butler


    - name: Compute version label
      id: ver
      shell: bash
      run: |
        if [ -f VERSION.txt ]; then
          echo "v=$(cat VERSION.txt)" >> $GITHUB_OUTPUT
        else
          # strip leading 'refs/tags/' and use the tag (v1.2.3)
          echo "v=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
        fi

    - name: "Push to itch.io (channel: windows)"
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
      run: |
        $HOME/.local/bin/butler push builds/cozy_cook_windows.zip \
          "${ITCHIO_USERNAME}/${ITCHIO_GAME}:windows" \
          --userversion "${{ steps.ver.outputs.v }}"


    # — export macOS —
    - name: Export macOS (Release)
      env:
        MAC_PRESET: "macOS"               # or "macOS (Universal)" if that's your preset name
      run: |
        mkdir -p "builds/macos"
        ~/godot/Godot_v${GODOT_VERSION}_linux.x86_64 --verbose --headless \
          --export-release "${MAC_PRESET}" "builds/macos/Cozy Cook.app"

    - name: Zip macOS build
      run: |
        cd "builds/macos"
        # Zip the .app bundle so butler uploads a single archive
        zip -r ../cozy_cook_macos.zip "Cozy Cook.app"
        cd -

    - name: "Push to itch.io (channel: macos)"
      env:
        BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
      run: |
        $HOME/.local/bin/butler push builds/cozy_cook_macos.zip \
          "${ITCHIO_USERNAME}/${ITCHIO_GAME}:macos" \
          --userversion "${{ steps.ver.outputs.v }}"


  # ───────────────── deploy job ─────────────────
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4